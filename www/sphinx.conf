#
# Sphinx configuration file sample
#
# WARNING! While this sample file mentions all available options,
# it contains (very) short helper descriptions only. Please refer to
# doc/sphinx.html for details.
#

#############################################################################
## data source definition
#############################################################################

source ilike_new
{
	type					= mysql

	sql_host				= localhost
	sql_user				= root
	sql_pass				= 
	sql_db				= beta
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre			= SET NAMES utf8

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	sql_query				= \
		SELECT u.id, u.id user_id, c.name city_name, c.id city_id, c.country_id, \
		       u.sex, IF(u.deleted='Y', 1, 0) deleted, CONCAT(u.name, ' ', u.surname, ' ', u.middlename) fio,\
             u.about, CONCAT(u.phone, ' ', u.phone2, u.icq, ' ', u.skype, ' ', u.jabber, ' ', u.blog, ' ', u.email, ' ', u.site) contacts,\
             u.books, u.music, u.hobby, u.films, u.games, u.sport, u.freetime, \
             c2.id birth_city_id, c3.id workplace_city_id, IF(u.status_romance='Y', 1, 0) romance,\
             CONCAT('sex', sex) sexor, CONCAT('uc_', c.id) usercity, CONCAT('uc_2_', c2.id) usercityb, CONCAT('uc_3_', c3.id) usercityw,\
             CONCAT('usercn_', c.country_id) usercn, CONCAT('usercn_2_', c2.country_id) usercn2, CONCAT('usercn_3_', c3.country_id) usercn3,\
             u.user_city, u.user_birth_city, u.user_workplace_city, u.user_country, u.user_birth_country, u.user_workplace_country,\
             CONCAT(highedu.highedu_edu, ' ', highedu.highedu_facultet, highedu.highedu_user_city, ' ', highedu.highedu_user_country) highedu_edu,\
             CONCAT(mediumedu.mediumedu_edu, ' ', mediumedu.mediumedu_group, ' ', mediumedu.mediumedu_user_city, ' ', mediumedu.mediumedu_user_country) mediumedu_edu,\
             CONCAT(school.school_edu, ' ', school.school_user_city, ' ', school.school_user_country) school_edu,\
             CONCAT(work.work_place, ' ', work.work_user_city, ' ', work.work_user_country) work,\
             CONCAT(army.army_place, ' ', army.army_user_city, ' ', army.army_user_country) army\
		FROM cms_users u\
      LEFT JOIN cms_cities c ON (u.city_id=c.id)\
      LEFT JOIN cms_cities c2 ON (u.birth_city_id=c2.id)\
      LEFT JOIN cms_cities c3 ON (u.workplace_city_id=c3.id)\
      LEFT JOIN cms_users_highedu highedu ON (u.id=highedu.user_id)\
      LEFT JOIN cms_users_mediumedu mediumedu ON (u.id=mediumedu.user_id)\
      LEFT JOIN cms_users_school school ON (u.id=school.user_id)\
      LEFT JOIN cms_users_work work ON (u.id=work.user_id)\
      LEFT JOIN cms_users_army army ON (u.id=army.user_id)\
      WHERE u.id>=$start AND u.id<=$end

	sql_query_range		= SELECT MIN(id),MAX(id) FROM cms_users

	sql_attr_uint			= city_id
   sql_attr_uint			= birth_city_id
   sql_attr_uint			= workplace_city_id
   sql_attr_uint			= country_id
	sql_attr_uint			= user_id
	sql_attr_uint			= sex
	sql_attr_uint			= romance

	sql_attr_bool			= deleted

	sql_ranged_throttle	= 0
}

source ilike_new_photo
{
	type					= mysql

	sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre			= SET NAMES utf8

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	sql_query				= \
		SELECT p.id, IF(p.name='', '333333', p.name) name, IF(p.fullaccess='Y', 1, 0) fullaccess, t.theme_id,\
      u.name user_name, u.surname,\
      IF(DATE_FORMAT(p.create_date,'%p')='AM', CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 1), CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 2)) create_date_grouping\
		FROM cms_users_albums_photoes p\
      LEFT JOIN cms_users_albums_photoes_themes t ON (p.id=t.photo_id)\
      INNER JOIN cms_users_albums a ON (p.album_id=a.id)\
      INNER JOIN cms_users u ON (a.user_id=u.id)\
      WHERE p.id>=$start AND p.id<=$end

	sql_query_range		= SELECT MIN(id),MAX(id) FROM cms_users_albums_photoes

	sql_attr_multi		= uint theme_id from field;

   sql_attr_bool			= fullaccess

   sql_attr_uint			= create_date_grouping

	sql_ranged_throttle	= 0
}

source ilike_new_faq
{
	type					= mysql

	sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre			= SET NAMES utf8

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	sql_query				= \
		SELECT p.id, p.name, IF(p.text='', '333333', p.text) text, t.id theme_id\
		FROM cms_faq p\
      INNER JOIN cms_faq_themes t ON (p.theme_id=t.id)\
      WHERE p.id>=$start AND p.id<=$end

	sql_query_range		= SELECT MIN(id),MAX(id) FROM cms_faq

	sql_attr_multi		= uint theme_id from field;

	sql_ranged_throttle	= 0
}


source ilike_new_video
{
        type = mysql
        
        sql_host				= localhost
        sql_user				= root
        sql_pass				=
        sql_db				= beta
        sql_port                                = 3306  # optional, default is 3306
                                    
        sql_query_pre                   = SET NAMES utf8
                                                        
        # main document fetch query
        # mandatory, integer document ID field MUST be the first selected column
        sql_query                               = \
            SELECT p.id, IF(p.name='', '444444', p.name) name, p.description, IF(p.fullaccess='Y', 1, 0) fullaccess, t.theme_id,\
            IF(DATE_FORMAT(p.create_date,'%p')='AM', CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 1), CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 2)) create_date_grouping\
            FROM cms_users_video p\
            LEFT JOIN cms_users_video_video_themes t ON (p.id=t.video_id)\
    	    WHERE p.id>=$start AND p.id<=$end
                                                                
        sql_query_range         = SELECT MIN(id),MAX(id) FROM cms_users_video
                                                                                                                                    
        sql_attr_multi          = uint theme_id from field;
                                                                                                                    
        sql_attr_bool                        = fullaccess

        sql_attr_uint			= create_date_grouping
                                                                                                                           
        sql_ranged_throttle     = 0
} 

source ilike_new_tips
{
        type                                    = mysql
        sql_host                                = localhost
        sql_user                                = root
        sql_pass                                =
        sql_db                          = beta
        sql_port                                = 3306  # optional, default is 3306

        sql_query_pre                   = SET NAMES utf8

        # main document fetch query
        # mandatory, integer document ID field MUST be the first selected column
        sql_query                               = \
                SELECT p.id, IF(p.name='', '555555', p.name) name, DATE_FORMAT(p.create_date,'%Y%m%d%') create_date, p.votes votes, p.user_id user_id, t.theme_id,\
                IF(DATE_FORMAT(p.create_date,'%p')='AM', CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 1), CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 2)) create_date_grouping\
                FROM cms_users_tips p\
      LEFT JOIN cms_users_tips_tips_themes t ON (p.id=t.tip_id)\
      WHERE p.id>=$start AND p.id<=$end

        sql_query_range         = SELECT MIN(id),MAX(id) FROM cms_users_tips

        sql_attr_multi          = uint theme_id from field;

       sql_attr_uint		= create_date
       sql_attr_uint		= votes
       sql_attr_multi		= uint user_id from field;
       sql_attr_uint			= create_date_grouping

        sql_ranged_throttle     = 0
}

source ilike_new_questions
{
        type                                    = mysql
        sql_host                                = localhost
        sql_user                                = root
        sql_pass                                =
        sql_db                          = beta
        sql_port                                = 3306  # optional, default is 3306

        sql_query_pre                   = SET NAMES utf8

        # main document fetch query
        # mandatory, integer document ID field MUST be the first selected column
        sql_query                               = \
                SELECT p.id, IF(p.name='', '666666', p.name) name, DATE_FORMAT(p.create_date,'%Y%m%d%') create_date, p.user_id user_id, t.theme_id,\
                IF(DATE_FORMAT(p.create_date,'%p')='AM', CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 1), CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 2)) create_date_grouping\
                FROM cms_users_questions p\
      LEFT JOIN cms_users_questions_questions_themes t ON (p.id=t.question_id)\
      WHERE p.id>=$start AND p.id<=$end

        sql_query_range         = SELECT MIN(id),MAX(id) FROM cms_users_questions

        sql_attr_multi          = uint theme_id from field;

       sql_attr_uint		= create_date
       sql_attr_multi		= uint user_id from field;
       sql_attr_uint			= create_date_grouping

        sql_ranged_throttle     = 0
}

source ilike_new_forum
{
        type                                    = mysql

        sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
        sql_port                                = 3306  # optional, default is 3306

        sql_query_pre                   = SET NAMES utf8

        # main document fetch query
        # mandatory, integer document ID field MUST be the first selected column
        sql_query                               = \
                SELECT p.id, p.text, t.group_id\
                FROM cms_groups_forum_themes_comments p\
                INNER JOIN cms_groups_forum_themes t ON (p.theme_id=t.id)\
                WHERE p.id>=$start AND p.id<=$end AND p.deleted = 'N'

        sql_query_range    = SELECT MIN(id), MAX(id) FROM cms_groups_forum_themes_comments

        sql_attr_uint			  = group_id

        sql_ranged_throttle     = 0
}

source ilike_new_forum_themes
{
        type                                    = mysql

        sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
        sql_port                                = 3306  # optional, default is 3306

        sql_query_pre                   = SET NAMES utf8

        # main document fetch query
        # mandatory, integer document ID field MUST be the first selected column
        sql_query                               = \
                SELECT p.id, p.text, p.header, p.group_id\
                FROM cms_groups_forum_themes p\
                WHERE p.id>=$start AND p.id<=$end

        sql_query_range    = SELECT MIN(id), MAX(id) FROM cms_groups_forum_themes

        sql_attr_uint			  = group_id

        sql_ranged_throttle     = 0
}

source ilike_new_groups
{
        type                                    = mysql
        
    sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
    sql_port                                = 3306  # optional, default is 3306
                                        
    sql_query_pre                   = SET NAMES utf8
                                                    
# main document fetch query
# mandatory, integer document ID field MUST be the first selected column
    sql_query                               = \
       SELECT p.id, IF(p.name='', '444444', p.name) name, t.name theme_name, p.text, c.name city_name, cn.name country_name, p.city_id, c.country_id, p.theme_id,\
       IF(DATE_FORMAT(p.create_date,'%p')='AM', CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 1), CONCAT(DATE_FORMAT(p.create_date,'%Y%m%d'), 2)) create_date_grouping\
      FROM cms_groups p\
     LEFT JOIN cms_groups_themes t ON (p.theme_id=t.id)\
    LEFT JOIN cms_cities c ON (p.city_id=c.id)\
   LEFT JOIN cms_countries cn ON (c.country_id=cn.id)\
      WHERE p.id>=$start AND p.id<=$end AND p.deleted='N'
                                                                  
    sql_query_range         = SELECT MIN(id),MAX(id) FROM cms_groups
                                                                      
    sql_attr_multi          = uint theme_id from field;
    sql_attr_uint			= city_id
    sql_attr_uint			= country_id
    sql_attr_uint			= create_date_grouping
    sql_ranged_throttle     = 0
} 

source ilike_new_widgets
{
	type					= mysql

	sql_host				= localhost
	sql_user				= root
	sql_pass				=
	sql_db				= beta
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre			= SET NAMES utf8

	# main document fetch query
	# mandatory, integer document ID field MUST be the first selected column
	sql_query				= \
		SELECT w.id, IF(w.name='', '333333', w.name) name, w.theme_id, w.author_id, 0 create_date_grouping\
		FROM cms_widgets w\
      WHERE w.id>=$start AND w.id<=$end

	sql_query_range		= SELECT MIN(id),MAX(id) FROM cms_widgets

	sql_attr_uint			= theme_id
   sql_attr_uint			= author_id
   sql_attr_uint			= create_date_grouping

	sql_ranged_throttle	= 0
}

## Конфигурационный файл Sphinx-а для индексации Живой улицы

#######################
#
# Описываем индексы
#
#######################

# Источник-родитель для всех остальных источников. Здесь указываются параметры доступа 
# к базе данных сайта
source lsParentSource
{
        type            = mysql
        sql_host        = localhost
        sql_user        = blogs
        sql_pass        = blogs
        sql_db          = blogsls
        sql_port        = 3306
        # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы 
        # операции с БД происходили не через TCP/IP стек сервера)
        sql_sock        = /var/run/mysqld/mysqld.sock
    
        
        mysql_connect_flags     = 32 # 32- включение сжатие при обмене данными с БД
    
        # Включам нужную кодировку соединения и выключаем кеш запросов
        sql_query_pre                   = SET NAMES utf8
        sql_query_pre                   = SET SESSION query_cache_type=OFF    
}

# Источник топиков
source topicsSource : lsParentSource
{
        # запрос на получения данных топиков
        sql_query               = \
                SELECT t_fast.topic_id, t_fast.topic_title, UNIX_TIMESTAMP(t_fast.topic_date_add) as topic_date_add, \
                tc.topic_text, t_fast.topic_publish \
                FROM blogs_topic as t_fast, blogs_topic_content AS tc \
                WHERE t_fast.topic_id=tc.topic_id AND t_fast.topic_id>=$start AND t_fast.topic_id<=$end

        # запрос для дробления получения топиков на неколько итераций
        sql_query_range         = SELECT MIN(topic_id),MAX(topic_id) FROM blogs_topic
        
        # сколько получать объектов за итерацию
        sql_range_step          = 1000

        
        # Указываем булевый атрибут критерия "топик опубликован". Для возможности указания этого критерия при поиске
        sql_attr_bool           = topic_publish

        # Атрибут даты добавления, типа "время"
        sql_attr_timestamp      = topic_date_add

        # мульти-аттрибут "теги топика"
        sql_attr_multi  = uint tag from query; SELECT topic_id, topic_tag_id FROM blogs_topic_tag

        sql_ranged_throttle     = 0
}

# Источник комментариев
source commentsSource : lsParentSource
{
        sql_query               = \
                        SELECT comment_id, comment_text, UNIX_TIMESTAMP(comment_date) as comment_date, comment_delete \
                        FROM blogs_comment \
                        WHERE comment_id>=$start AND comment_id<=$end

        sql_query_range         = SELECT MIN(comment_id),MAX(comment_id) FROM blogs_comment
        sql_range_step          = 5000

        sql_attr_bool           = comment_delete
        sql_attr_timestamp      = comment_date
}

#######################
#
# Описываем индексы
#
#######################

index topicsIndex
{
        # Источник, который будет хранить данный индекса
        source                  = topicsSource
        path                    = /var/data/lstopic

        # Тип хранения аттрибутов
        docinfo                 = extern

        mlock                   = 0

        # Используемые морфологические движки
        morphology              = stem_enru, soundex, metaphone

        # Кодировака данных из источника        
        charset_type            = utf-8


        # Из данных источника HTML-код нужно вырезать
        html_strip                              = 1
}

# Индекс комментариев
index commentsIndex
{
        source                  = commentsSource
        path                    = /var/data/lscomments

        docinfo                 = extern

        mlock                   = 0

        morphology              = stem_enru, soundex, metaphone

        charset_type            = utf-8
}


# inherited source example
#
# all the parameters are copied from the parent source,
# and may then be overridden in this source definition

#############################################################################
## index definition
#############################################################################

# local index example
#
# this is an index which is stored locally in the filesystem
#
# all indexing-time options (such as morphology and charsets)
# are configured per local index
index test1
{
	# document source(s) to index
	# multi-value, mandatory
	# document IDs must be globally unique across all sources
	source			= src1

	# index files path and file name, without extension
	# mandatory, path must be writable, extensions will be auto-appended
	path			= /var/data/test1

	# document attribute values (docinfo) storage mode
	# optional, default is 'extern'
	# known values are 'none', 'extern' and 'inline'
	docinfo			= extern

	# memory locking for cached data (.spa and .spi), to prevent swapping
	# optional, default is 0 (do not mlock)
	# requires searchd to be run from root
	mlock			= 0

	# a list of morphology preprocessors to apply
	# optional, default is empty
	#
	# builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
	# 'soundex', and 'metaphone'; additional preprocessors available from
	# libstemmer are 'libstemmer_XXX', where XXX is algorithm code
	# (see libstemmer_c/libstemmer/modules.txt)
	#
	# morphology 	= stem_en, stem_ru, soundex
	# morphology	= libstemmer_german
	# morphology	= libstemmer_sv
	# morphology		= none
	morphology 	= stem_enru

	# stopword files list (space separated)
	# optional, default is empty
	# contents are plain text, charset_table and stemming are both applied
	#
	# stopwords			= /var/data/stopwords.txt


	# wordforms file, in "mapfrom > mapto" plain text format
	# optional, default is empty
	#
	# wordforms			= /var/data/wordforms.txt


	# tokenizing exceptions file
	# optional, default is empty
	#
	# plain text, case sensitive, space insensitive in map-from part
	# one "Map Several Words => ToASingleOne" entry per line
	#
	# exceptions		= /var/data/exceptions.txt


	# minimum indexed word length
	# default is 1 (index everything)
	min_word_len		= 1

	# charset encoding type
	# optional, default is 'sbcs'
	# known types are 'sbcs' (Single Byte CharSet) and 'utf-8'
	charset_type		= utf-8

	# charset definition and case folding rules "table"
	# optional, default value depends on charset_type
	#
	# defaults are configured to include English and Russian characters only
	# you need to change the table to include additional ones
	# this behavior MAY change in future versions
	#
	# 'sbcs' default value is
	# charset_table		= 0..9, A..Z->a..z, _, a..z, U+A8->U+B8, U+B8, U+C0..U+DF->U+E0..U+FF, U+E0..U+FF
	#
	# 'utf-8' default value is
	# charset_table		= 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F


	# ignored characters list
	# optional, default value is empty
	#
	# ignore_chars		= U+00AD


	# minimum word prefix length to index
	# optional, default is 0 (do not index prefixes)
	#
	# min_prefix_len	= 0


	# minimum word infix length to index
	# optional, default is 0 (do not index infixes)
	#
	# min_infix_len		= 0


	# list of fields to limit prefix/infix indexing to
	# optional, default value is empty (index all fields in prefix/infix mode)
	#
	# prefix_fields		= filename
	# infix_fields		= url, domain


	# enable star-syntax (wildcards) when searching prefix/infix indexes
	# known values are 0 and 1
	# optional, default is 0 (do not use wildcard syntax)
	#
	# enable_star		= 1


	# n-gram length to index, for CJK indexing
	# only supports 0 and 1 for now, other lengths to be implemented
	# optional, default is 0 (disable n-grams)
	#
	# ngram_len				= 1


	# n-gram characters list, for CJK indexing
	# optional, default is empty
	#
	# ngram_chars			= U+3000..U+2FA1F


	# phrase boundary characters list
	# optional, default is empty
	#
	# phrase_boundary		= ., ?, !, U+2026 # horizontal ellipsis


	# phrase boundary word position increment
	# optional, default is 0
	#
	# phrase_boundary_step	= 100


	# whether to strip HTML tags from incoming documents
	# known values are 0 (do not strip) and 1 (do strip)
	# optional, default is 0
	html_strip				= 1

	# what HTML attributes to index if stripping HTML
	# optional, default is empty (do not index anything)
	#
	# html_index_attrs		= img=alt,title; a=title;


	# what HTML elements contents to strip
	# optional, default is empty (do not strip element contents)
	#
	html_remove_elements	= style, script


	# whether to preopen index data files on startup
	# optional, default is 0 (do not preopen)
	#
	# preopen				= 1
}


index ilike_new : test1
{
    source = ilike_new
    path = /var/data/ilike_new
}

index ilike_new_photo : test1
{
    source = ilike_new_photo
    path = /var/data/ilike_new_photo
}

index ilike_new_video : test1
{
    source = ilike_new_video
    path = /var/data/ilike_new_video
}

index ilike_new_tips : test1
{
    source = ilike_new_tips
    path = /var/data/ilike_new_tips
}

index ilike_new_forum : test1
{
    source = ilike_new_forum
    path = /var/data/ilike_new_forum
}

index ilike_new_forum_themes : test1
{
    source = ilike_new_forum_themes
    path = /var/data/ilike_new_forum_themes
}

index ilike_new_groups : test1
{
    source = ilike_new_groups
    path = /var/data/ilike_new_groups
}

index ilike_new_faq : test1
{
    source = ilike_new_faq
    path = /var/data/ilike_new_faq
}

index ilike_new_widgets : test1
{
    source = ilike_new_widgets
    path = /var/data/ilike_new_widgets
}

# inherited index example
#
# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
index test1stemmed : test1
{
	path			= /var/data/test1stemmed
	morphology		= stem_en
}


# distributed index example
#
# this is a virtual index which can NOT be directly indexed,
# and only contains references to other local and/or remote indexes
index dist1
{
	# 'distributed' index type MUST be specified
	type				= distributed

	# local index to be searched
	# there can be many local indexes configured
	local				= test1
#	local				= adv
#	local				= tender
#	local				= test1stemmed

	# remote agent
	# multiple remote agents may be specified
	# syntax is 'hostname:port:index1,[index2[,...]]
#	agent				= localhost:3313:remote1
#	agent				= localhost:3314:remote2,remote3

	# remote agent connection timeout, milliseconds
	# optional, default is 1000 ms, ie. 1 sec
#	agent_connect_timeout	= 1000

	# remote agent query timeout, milliseconds
	# optional, default is 3000 ms, ie. 3 sec
#	agent_query_timeout		= 3000
}

#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 32M, max is 2047M, recommended is 256M to 1024M
	mem_limit			= 64M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iops			= 40


	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iosize		= 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# IP address to bind on
	# optional, default is 0.0.0.0 (ie. listen on all interfaces)
	#
	# address				= 127.0.0.1
	# address				= 192.168.0.1


	# searchd TCP port number
	# mandatory, default is 3312
	port				= 3312

	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log					= /var/log/searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	query_log			= /var/log/query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 30

	# PID file, searchd process ID file name
	# mandatory
	pid_file			= /var/log/searchd.pid

	# max amount of matches the daemon ever keeps in RAM, per-index
	# WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
	# default is 1000 (just like Google)
	max_matches			= 1000

	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	seamless_rotate		= 1

	# whether to forcibly preopen all indexes on startup
	# optional, default is 0 (do not preopen)
	preopen_indexes		= 0

	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	unlink_old			= 1
}

# --eof--
